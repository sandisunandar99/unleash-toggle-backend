"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.get = exports.post = exports.buildHeaders = exports.getAgent = void 0;
var fetch = require("make-fetch-happen");
var http = require("http");
var https = require("https");
var httpAgent = new http.Agent({
    keepAlive: true,
    keepAliveMsecs: 30 * 1000,
    timeout: 10 * 1000,
});
var httpsAgent = new https.Agent({
    keepAlive: true,
    keepAliveMsecs: 30 * 1000,
    timeout: 10 * 1000,
});
var getAgent = function (url) { return (url.protocol === 'https:' ? httpsAgent : httpAgent); };
exports.getAgent = getAgent;
var buildHeaders = function (appName, instanceId, etag, contentType, custom) {
    var head = {};
    if (appName) {
        head['UNLEASH-APPNAME'] = appName;
        head['User-Agent'] = appName;
    }
    if (instanceId) {
        head['UNLEASH-INSTANCEID'] = instanceId;
    }
    if (etag) {
        head['If-None-Match'] = etag;
    }
    if (contentType) {
        head['Content-Type'] = contentType;
    }
    if (custom) {
        Object.assign(head, custom);
    }
    return head;
};
exports.buildHeaders = buildHeaders;
var post = function (_a) {
    var url = _a.url, appName = _a.appName, timeout = _a.timeout, instanceId = _a.instanceId, headers = _a.headers, json = _a.json;
    return fetch(url, {
        timeout: timeout || 10000,
        method: 'POST',
        agent: exports.getAgent,
        headers: exports.buildHeaders(appName, instanceId, undefined, 'application/json', headers),
        body: JSON.stringify(json),
    });
};
exports.post = post;
var get = function (_a) {
    var url = _a.url, etag = _a.etag, appName = _a.appName, timeout = _a.timeout, instanceId = _a.instanceId, headers = _a.headers;
    return fetch(url, {
        method: 'GET',
        timeout: timeout || 10000,
        agent: exports.getAgent,
        headers: exports.buildHeaders(appName, instanceId, etag, undefined, headers),
        retry: {
            retries: 2,
        },
    });
};
exports.get = get;
//# sourceMappingURL=request.js.map